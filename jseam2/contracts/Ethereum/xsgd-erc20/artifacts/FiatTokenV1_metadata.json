{
	"compiler": {
		"version": "0.4.24+commit.e67f0147"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_spender",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_name",
						"type": "string"
					},
					{
						"name": "_symbol",
						"type": "string"
					},
					{
						"name": "_decimals",
						"type": "uint8"
					},
					{
						"name": "_masterMinter",
						"type": "address"
					},
					{
						"name": "_pauser",
						"type": "address"
					},
					{
						"name": "_blacklister",
						"type": "address"
					},
					{
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_tokenAddress",
						"type": "address"
					}
				],
				"name": "reclaimToken",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_account",
						"type": "address"
					}
				],
				"name": "unBlacklist",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_from",
						"type": "address"
					},
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "masterMinter",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_spender",
						"type": "address"
					},
					{
						"name": "_addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newPauser",
						"type": "address"
					}
				],
				"name": "updatePauser",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_address",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_from",
						"type": "address"
					}
				],
				"name": "lawEnforcementWipingBurn",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_minter",
						"type": "address"
					}
				],
				"name": "minterAllowance",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pauser",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_minter",
						"type": "address"
					},
					{
						"name": "_decreasedAmount",
						"type": "uint256"
					}
				],
				"name": "decreaseMinterAllowance",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_spender",
						"type": "address"
					},
					{
						"name": "_subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newMasterMinter",
						"type": "address"
					}
				],
				"name": "updateMasterMinter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_address",
						"type": "address"
					}
				],
				"name": "isMinter",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newBlacklister",
						"type": "address"
					}
				],
				"name": "updateBlacklister",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "blacklister",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_minter",
						"type": "address"
					},
					{
						"name": "_increasedAmount",
						"type": "uint256"
					}
				],
				"name": "increaseMinterAllowance",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_from",
						"type": "address"
					},
					{
						"name": "_value",
						"type": "uint256"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "tokenFallback",
				"outputs": [],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_owner",
						"type": "address"
					},
					{
						"name": "_spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_account",
						"type": "address"
					}
				],
				"name": "blacklist",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_account",
						"type": "address"
					}
				],
				"name": "isBlacklisted",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "burner",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "minterAllowedAmount",
						"type": "uint256"
					}
				],
				"name": "MinterConfigured",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "oldMinter",
						"type": "address"
					}
				],
				"name": "MinterRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "newMasterMinter",
						"type": "address"
					}
				],
				"name": "MasterMinterChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_account",
						"type": "address"
					}
				],
				"name": "Blacklisted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_account",
						"type": "address"
					}
				],
				"name": "UnBlacklisted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "newBlacklister",
						"type": "address"
					}
				],
				"name": "BlacklisterChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Pause",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Unpause",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "PauserChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"allowance(address,address)": {
					"details": "Function to get token allowance given to a spender by the owner",
					"params": {
						"_owner": "address The address of the owner",
						"_spender": "address The address of the spender"
					},
					"return": "The number of tokens that a spender can spend on behalf of the owner"
				},
				"approve(address,uint256)": {
					"details": "Function to approves a spender to spend up to a certain amount of tokens Validates that the contract is not paused the owner and spender are not blacklisted Avoid calling this function if possible (https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729)",
					"params": {
						"_amount": "uint256 The amount of tokens that the spender is approved to spend",
						"_spender": "address The Address of the spender"
					},
					"return": "True if the operation was successful."
				},
				"balanceOf(address)": {
					"details": "Function to get token balance of an address",
					"params": {
						"_address": "address The account"
					},
					"return": "The token balance of an address"
				},
				"blacklist(address)": {
					"details": "Adds account to blacklist",
					"params": {
						"_account": "The address to blacklist"
					}
				},
				"burn(uint256)": {
					"details": "Function to allow a minter to burn some of its own tokens Validates that the contract is not paused caller is a minter and is not blacklisted amount is less than or equal to the minter's mint allowance balance",
					"params": {
						"_amount": "uint256 the amount of tokens to be burned"
					}
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Alternative function to the approve function Decreases the allowance of the spender Validates that the contract is not paused the owner and spender are not blacklisted",
					"params": {
						"_spender": "address The Address of the spender",
						"_subtractedValue": "uint256 The amount of tokens to be subtracted from a spender's allowance"
					},
					"return": "True if the operation was successful."
				},
				"decreaseMinterAllowance(address,uint256)": {
					"details": "Function to decrease minter allowance of a minter Validates that only the master minter can call this function",
					"params": {
						"_decreasedAmount": "uint256 The amount of allowance to be subtracted from a minter's allowance",
						"_minter": "address The address of the minter"
					}
				},
				"increaseAllowance(address,uint256)": {
					"details": "Alternative function to the approve function Increases the allowance of the spender Validates that the contract is not paused the owner and spender are not blacklisted",
					"params": {
						"_addedValue": "uint256 The amount of tokens to be added to a spender's allowance",
						"_spender": "address The Address of the spender"
					},
					"return": "True if the operation was successful."
				},
				"increaseMinterAllowance(address,uint256)": {
					"details": "Function to increase minter allowance of a minter Validates that only the master minter can call this function",
					"params": {
						"_increasedAmount": "uint256 The amount of to be added to a minter's allowance",
						"_minter": "address The address of the minter"
					}
				},
				"initialize(string,string,uint8,address,address,address,address)": {
					"details": "Function to initialise contract",
					"params": {
						"_blacklister": "address Address of the blacklister",
						"_decimals": "uint8 Token decimals",
						"_masterMinter": "address Address of the master minter",
						"_name": "string Token name",
						"_owner": "address Address of the owner",
						"_pauser": "address Address of the pauser",
						"_symbol": "string Token symbol"
					}
				},
				"isBlacklisted(address)": {
					"details": "Checks if account is blacklisted",
					"params": {
						"_account": "The address to check"
					}
				},
				"isMinter(address)": {
					"details": "Function to check if an address is a minter",
					"params": {
						"_address": "The address to check"
					},
					"return": "A boolean value to indicates if an address is a minter"
				},
				"lawEnforcementWipingBurn(address)": {
					"details": "Function to allow the blacklister to burn entire balance of tokens from a blacklisted address Validates that contract is not paused caller is the blacklister address to burn tokens from is a blacklisted address",
					"params": {
						"_from": "address the address to burn tokens from"
					}
				},
				"mint(address,uint256)": {
					"details": "Function to mint tokens Validates that the contract is not paused only minters can call this function minter and the address that will received the minted tokens are not blacklisted",
					"params": {
						"_amount": "uint256 The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
						"_to": "address The address that will receive the minted tokens."
					},
					"return": "True if the operation was successful."
				},
				"minterAllowance(address)": {
					"details": "Function to get minter allowance of an address",
					"params": {
						"_minter": "address The address of check minter allowance of"
					},
					"return": "The minter allowance of the address"
				},
				"owner()": {
					"details": "Tells the address of the owner",
					"return": "the address of the owner"
				},
				"pause()": {
					"details": "called by the owner to pause, triggers stopped state"
				},
				"reclaimToken(address)": {
					"details": "Function to reclaim all ERC20Recovery compatible tokens Validates that the caller is the owner",
					"params": {
						"_tokenAddress": "address The address of the token contract"
					}
				},
				"tokenFallback(address,uint256,bytes)": {
					"details": "Function to reject all EIP223 compatible tokens",
					"params": {
						"_data": "bytes The data passed from the caller",
						"_from": "address The address that is transferring the tokens",
						"_value": "uint256 the amount of the specified token"
					}
				},
				"totalSupply()": {
					"details": "Function to get total supply of token",
					"return": "The total supply of the token"
				},
				"transfer(address,uint256)": {
					"details": "Function to transfer token to a specified address Validates that the contract is not paused The sender and receiver are not blacklisted",
					"params": {
						"_amount": "The amount of tokens to be transferred.",
						"_to": "The address to transfer to."
					},
					"return": "True if the operation is successful"
				},
				"transferFrom(address,address,uint256)": {
					"details": "Function to transfer tokens from one address to another. Validates that the contract is not paused the caller, sender and receiver of the tokens are not blacklisted",
					"params": {
						"_amount": "uint256 the amount of tokens to be transferred",
						"_from": "address The address which you want to send tokens from",
						"_to": "address The address which you want to transfer to"
					},
					"return": "True if the operation was successful."
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				},
				"unBlacklist(address)": {
					"details": "Removes account from blacklist",
					"params": {
						"_account": "The address to remove from the blacklist"
					}
				},
				"unpause()": {
					"details": "called by the owner to unpause, returns to normal state"
				},
				"updateMasterMinter(address)": {
					"details": "Function to update the masterMinter role Validates that the caller is the owner"
				},
				"updatePauser(address)": {
					"details": "update the pauser role"
				}
			},
			"title": "FiatToken"
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/Ethereum/xsgd-erc20/FiatTokenV1.sol": "FiatTokenV1"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/Ethereum/xsgd-erc20/FiatTokenV1.sol": {
			"keccak256": "0x76045b1e2b232c3b3ad3a2eec7062d508cb5d741a73b7f925cd8b0e0bb722428",
			"urls": [
				"bzzr://4f20651d10578a1b69ae9d9c4c7928911c45bee832891c2da46adb42abe00063"
			]
		}
	},
	"version": 1
}